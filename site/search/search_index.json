{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"General","text":""},{"location":"#overview","title":"Overview","text":"<p>This documentation is for Cheer Supports app IOS version.</p> <p>This mobile application is the application of the Cheer Supports Website. It has been developed using the web-view method to ensure familiarity and display information about the events regularly and automatically. It also has additional features to cover the minimum features and requirements of a web-view app to publish in the Apple Store.</p> <p>Application features: </p> <ul> <li>In app login system</li> <li>In app chat system</li> <li>Daily tracking system </li> <li>Daily task system</li> <li>Rewards system</li> <li>Simple Leveling system</li> <li>In app usage only items</li> <li>In app purchase with Apple Pay</li> <li>Has notification system </li> <li>Has own point system for purchasing in app item</li> </ul> <p>Cheer Support App Repository</p>"},{"location":"#app-settings","title":"App Settings","text":"<p>Min IOS Deployment Target : 15.1</p> <p>Bundle Identifier : com.Kyi.Co.Ltd.Jp.Cheer-Supports</p> <p>Capabitilities : </p> <ul> <li>Background Modes [ Background fetch, Remote Notification, Background processing ]</li> <li>In-App Purchase</li> <li>Push Notification</li> </ul> <p>/ Firebase Details add later AWS Database datails add later /</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li> <p>Either use this step  Install GitHub Desktop software MacOS  Follow this steps for cloning repository.</p> </li> <li> <p>Or use command-line tools (terminal)</p> </li> </ul> <p><pre><code>git clone --single-branch --branch features/NewIOSVersion https://github.com/kyi-developers-organization/Cheer-Supports-Mobile-App.git\n</code></pre> This command line will clone ios xcode project only.</p>"},{"location":"#dependecies","title":"Dependecies","text":"<ul> <li> <p>Bottom Sheet -&gt; version 3.1.1 <pre><code>https://github.com/lucaszischka/BottomSheet.git\n</code></pre></p> </li> <li> <p>Firebase SDK -&gt; version 10.19.1 <pre><code>https://github.com/firebase/firebase-ios-sdk.git\n</code></pre></p> </li> <li> <p>SDWebImage SwiftUi -&gt; version 3.0.2 <pre><code>https://github.com/SDWebImage/SDWebImageSwiftUI.git\n</code></pre></p> </li> <li> <p>GoogleAPI Auth -&gt;  version 0.5.3 <pre><code>https://github.com/googleapis/google-auth-library-swift.git\n</code></pre></p> </li> </ul> <p>SPM Screenshot</p>"},{"location":"#project-layout","title":"Project layout","text":"<p>This is full navigation layout</p>"},{"location":"#home","title":"Home","text":"<p>Home is linked to Profile,  Chat, Cheer --&gt; Items and Settings views through buttons.</p> <p>Home page has 2 main stack view. First is contain webview, Second one is contain ui buttons. For better visualization about stack views check this image User has to be login both app and website login system otherwise streaming button will popup Signin view.  Users can register through website. </p>"},{"location":"#profile","title":"Profile","text":"<p>Profile is linked to Daily Tasks, Signin, Exp Purchase and Cheer through the buttons. </p> <p>This view divided 3 main stack views. User level section has Login button link to Sigin view. All user informations are saved Firebase DB --&gt; Users --&gt; UUID (uniqe id generated by Firebase).</p> <p>Reward Section contain only ui views.</p> <p>Level up section is has 3 buttons and linked to exp card purchase view, daily tasks view and Cheer purchase view respectively.  </p>"},{"location":"#daily-tasks","title":"Daily Tasks","text":"<p>Daily is only linked to Profile view. Divided 3 main stack views.  User Info section;  most of datas are retrieve from Firebase db, only cheer data value retrieve from AWS db. Daily Login section; contain UI view and related functions. Daily Missions section; Information about mission and button for collecting reward, buttons are will active when user finised the task otherwise will be inactive. Active buttons color is orange, inactive buttons color is gray.</p>"},{"location":"#chat-room","title":"Chat Room","text":"<p>Chat is linked to Signin and Home through to butttons in Top section view. Chat section shows list of the message save in Firebase --&gt; Msgs documents. Bottom section; image picker and emokji view list hidden under plus \"+\" button and send button will hidden until user type any text or select any image(or emoji).  Top section and Section backgrounds are synchronized with ui button style. </p>"},{"location":"#cart","title":"Cart","text":"<p>Cheer ----&gt; Items</p>"},{"location":"#exp-purchase","title":"Exp Purchase","text":""},{"location":"#exp-multiply","title":"Exp Multiply","text":""},{"location":"#ui-style","title":"UI Style","text":""},{"location":"#font-style","title":"Font Style","text":""},{"location":"#emojis","title":"Emojis","text":""},{"location":"#animated-emojis","title":"Animated Emojis","text":""},{"location":"#settings","title":"Settings","text":"<p>Settings ----&gt; Item Lists Owned Items</p>"},{"location":"#credentails","title":"Credentails","text":""},{"location":"example/","title":"Examples","text":""}]}